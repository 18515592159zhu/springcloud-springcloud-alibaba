server:
  port: 80 #网关一般是80
spring:
  application:
    name: gateway-server
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true #开启动态路由  开启通过应用名称 找到服务的功能
          lower-case-service-id: true  # 开启服务名称小写
      enabled: true #开启网关，默认是开启的，只要加了依赖 默认开启
      routes: #设置路由，注意是数组，可以设置多个，按照 id 做隔离，如果一个服务里面有100个路径  如果我想做负载均衡 ??   动态路由
        - id: user-service-router #这个是路由 id，没有要求，保持唯一即可
          # uri: http://localhost:8081 #设置真正的服务 ip:port    uri统一资源定位符   url 统一资源标识符
          uri: lb://user-service-router #使用 lb 协议 微服务名称做负载均衡
          predicates: #断言匹配 断言是给某一个路由来设定的一种匹配规则 默认不能作用在动态路由上
            - Path=/info/** #和服务中的路径匹配,是正则匹配的模式，只要你Path匹配上了/info 就往 uri 转发 并且将路径带上
            - After=2020-01-20T17:42:47.789-07:00[Asia/Shanghai] #此断言匹配发生在指定日期时间之后的请求，ZonedDateTime dateTime=ZonedDateTime.now()获得
            - Before=2020-06-18T21:26:26.711+08:00[Asia/Shanghai] #此断言匹配发生在指定日期时间之前的请求
            - Between=2020-06-18T21:26:26.711+08:00[Asia/Shanghai],2020-06-18T21:32:26.711+08:00[Asia/Shanghai] #此断言匹配发生在指定日期时间之间的请求
            - Cookie=name,xiaobai #Cookie 路由断言工厂接受两个参数，Cookie 名称和 regexp(一个 Java 正则表达式)。此断言匹配具有给定名称且其值与正则表达式匹配的 cookie
            - Header=token,123456 #头路由断言工厂接受两个参数，头名称和 regexp(一个 Java 正则表达式)。此断言与具有给定名称的头匹配，该头的值与正则表达式匹配。
            - Host=**.bai*.com:* #主机路由断言工厂接受一个参数:主机名模式列表。该模式是一个 ant 样式的模式。作为分隔符。此断言匹配与模式匹配的主机头
            - Method=GET,POST #方法路由断言工厂接受一个方法参数，该参数是一个或多个参数:要匹配的 HTTP 方法
            - Query=username,cxs #查询路由断言工厂接受两个参数:一个必需的 param 和一个可选的 regexp(一个 Java 正则表达式)。
            - RemoteAddr=192.168.1.1/24 #RemoteAddr 路由断言工厂接受一个源列表(最小大小 1)，这些源是 cidr 符号(IPv4 或 IPv6)字符串，比如 192.168.1.1/24(其中 192.168.1.1 是 IP 地址，24 是子网掩码)。
        - id: provider-service-router
          # uri: http://localhost:8082
          uri: lb://provider-service-router
          predicates:
            - Path=/info/** #如果匹配到第一个路由，则第二个就不会走了，注意这不是负载均衡
#eureka 的配置
eureka:
  client:
    service-url:
      defaultZone: http://192.168.168.168:8761/eureka
    registry-fetch-interval-seconds: 3 # 网关拉取服务列表的时间缩短
    register-with-eureka: true #是否注册自己（单机 eureka 一般关闭注册自己,集群注意打开）
  instance:
    hostname: localhost
    instance-id: ${eureka.instance.hostname}:${spring.application.name}:${server.port}
    prefer-ip-address: true

